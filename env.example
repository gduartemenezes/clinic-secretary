# Database Configuration
DATABASE_URL=sqlite:///./medical_clinic.db

# Google Calendar API Configuration
GOOGLE_CALENDAR_ID=primary

# Option 1: Service account JSON as environment variable (recommended for production)
# IMPORTANT: The JSON must be properly escaped and on a single line
# Example format (replace with your actual service account JSON):
GOOGLE_SERVICE_ACCOUNT_JSON={"type":"service_account","project_id":"your-project-id","private_key_id":"key-id","private_key":"-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_CONTENT\n-----END PRIVATE KEY-----\n","client_email":"service-account@your-project.iam.gserviceaccount.com","client_id":"client-id","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/service-account%40your-project.iam.gserviceaccount.com"}

# Option 2: Service account file path (alternative)
# Point to a JSON file containing your service account credentials
GOOGLE_SERVICE_ACCOUNT_FILE=./credentials/service-account.json

# Option 3: Direct access token (for simple cases)
# Use this for quick testing, but less secure for production
GOOGLE_ACCESS_TOKEN=your_access_token_here

# Option 4: OAuth2 credentials file (for development)
# Path to your OAuth2 credentials file (usually token.json)
GOOGLE_CREDENTIALS_FILE=./credentials/token.json

# Meta API Configuration (for Phase 2 - WhatsApp)
META_ACCESS_TOKEN=your_meta_access_token
META_PHONE_NUMBER_ID=your_phone_number_id
META_BUSINESS_ACCOUNT_ID=your_business_account_id
META_VERIFY_TOKEN=your_webhook_verify_token

# WhatsApp Template Names (for Phase 2)
WHATSAPP_APPOINTMENT_CONFIRMATION_TEMPLATE=appointment_confirmation
WHATSAPP_APPOINTMENT_REMINDER_TEMPLATE=appointment_reminder

# OpenAI Configuration (if using ChatOpenAI)
OPENAI_API_KEY=your_openai_api_key

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=true

# =============================================================================
# GOOGLE CALENDAR SETUP INSTRUCTIONS:
# =============================================================================
# 
# 1. Go to Google Cloud Console: https://console.cloud.google.com/
# 2. Create a new project or select existing one
# 3. Enable Google Calendar API
# 4. Create a Service Account:
#    - Go to IAM & Admin > Service Accounts
#    - Click "Create Service Account"
#    - Give it a name (e.g., "medical-secretary-calendar")
#    - Grant "Calendar API > Calendar API User" role
#    - Create and download the JSON key file
# 
# 5. For Option 1 (GOOGLE_SERVICE_ACCOUNT_JSON):
#    - Copy the entire JSON content from the downloaded file
#    - Paste it as the value for GOOGLE_SERVICE_ACCOUNT_JSON
#    - Ensure it's on a single line with proper escaping
# 
# 6. For Option 2 (GOOGLE_SERVICE_ACCOUNT_FILE):
#    - Place the downloaded JSON file in your project
#    - Set GOOGLE_SERVICE_ACCOUNT_FILE to the file path
# 
# 7. Share your Google Calendar with the service account email
#    - Open Google Calendar
#    - Go to Settings > Share with specific people
#    - Add the service account email (ends with @your-project.iam.gserviceaccount.com)
#    - Grant "Make changes to events" permission
# 
# =============================================================================
# TROUBLESHOOTING:
# =============================================================================
# 
# Common JSON parsing errors:
# - Ensure the JSON is on a single line
# - Remove any extra quotes around the entire JSON string
# - Escape any quotes within the JSON content
# - Check that the JSON is valid (use a JSON validator)
# 
# File path errors:
# - Use absolute paths or relative paths from project root
# - Ensure the file exists and is readable
# - Check file permissions
# 
# Authentication errors:
# - Verify the service account has the correct permissions
# - Check that the calendar is shared with the service account
# - Ensure the Google Calendar API is enabled
# - Verify the project ID matches your Google Cloud project
